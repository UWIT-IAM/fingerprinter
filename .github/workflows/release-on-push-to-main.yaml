name: Release on push to `main`
on:
  push:
    branches:
      - main
    paths:
      - pyproject.toml
jobs:
  check-publishability:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Only publish if the version has changed; otherwise, we would be
      # re-publishing existing stuff without updating the version, and that
      # could cause problems.
      - run: |
          publishable=false
          if git show | grep 'version ='
          then
            publishable=true
          fi
          echo "::set-output name=publish::${publishable}"
  build-and-publish:
    needs: [check-publishability]
    if: needs.check-publishability.outputs.publishable == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: abatilo/actions-poetry@v2.1.3
      - run: poetry config virtualenvs.create false
      - run: sudo apt-get -y install jq
      - run: |
          version=$(poetry version -s)
          echo "::set-output name=version::${version}"
          umbrella_version=$(echo "${version}" | cut -f1-2 -d.)
          echo "::set-output name=umbrella-version::${umbrella_version}"
        id: get-version
      - run: poetry install
      - run: |
          $(fingerprinter -o build-script) --release ${version} --cache
          $(fingerprinter -o build-script) --release ${umbrella-version} --cache
        env:
          version: ${{ steps.get-version.outputs.version }}
          umbrella_version: ${{ steps.get-version.outputs.umbrella-version }}
      - run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry build -n
          poetry publish -n
